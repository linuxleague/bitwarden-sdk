---
name: Release @bitwarden/sdk-napi
run-name: Release @bitwarden/sdk-napi ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Initial Release"
        type: choice
        options:
          - Initial Release
          - Redeploy
          - Dry Run
      npm_publish:
        description: "Publish to NPM registry"
        required: true
        default: true
        type: boolean

defaults:
  run:
    shell: bash
    working-directory: crates/bitwarden-napi

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Branch check
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/rc" ]] && [[ "$GITHUB_REF" != "refs/heads/hotfix-rc" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'rc' or 'hotfix-rc' branches"
            echo "==================================="
            exit 1
          fi

      - name: Check Release Version
        id: version
        uses: bitwarden/gh-actions/release-version-check@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          release-type: ${{ github.event.inputs.release_type }}
          project-type: ts
          file: crates/bitwarden-napi/package.json
          monorepo: false

      - name: Create GitHub deployment
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: chrnorm/deployment-action@d42cde7132fcec920de534fffc3be83794335c00 # v2.0.5
        id: deployment
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "in_progress"
          environment: "Bitwarden SDK NAPI - Production"
          description: "Deployment ${{ steps.version.outputs.version }} from branch ${{ github.ref_name }}"
          task: release

      - name: Download all Release artifacts
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          workflow: build-napi.yml
          path: artifacts
          workflow_conclusion: success
          branch: ${{ github.ref_name }}

      - name: Dry Run - Download all artifacts
        if: ${{ github.event.inputs.release_type == 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          workflow: build-napi.yml
          path: artifacts
          workflow_conclusion: success
          branch: master

      - name: Create release
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
        env:
          PKG_VERSION: ${{ steps.version.outputs.version }}
        with:
          artifacts: ""
          commit: ${{ github.sha }}
          tag: sdk-napi-v${{ env.PKG_VERSION }}
          name: Bitwarden SDK NAPI v${{ env.PKG_VERSION }}
          body: "<insert release notes here>"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

      - name: Update deployment status to Success
        if: ${{ github.event.inputs.release_type != 'Dry Run' && success() }}
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # v2.0.1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status to Failure
        if: ${{ github.event.inputs.release_type != 'Dry Run' && failure() }}
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # v2.0.1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

  npm:
    name: Publish NPM
    runs-on: ubuntu-22.04
    needs: setup
    if: inputs.npm_publish
    env:
      _PKG_VERSION: ${{ needs.setup.outputs.release-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Setup Node
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: crates/bitwarden-napi/package-lock.json

      - name: Download schemas
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          workflow: build-napi.yml
          artifacts: schemas.ts
          path: ${{ github.workspace }}/crates/bitwarden-napi/src-ts/bitwarden_client/
          workflow_conclusion: success
          branch: ${{ github.ref_name }}

      - name: Dry Run - Download schemas
        if: ${{ github.event.inputs.release_type == 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          workflow: build-napi.yml
          artifacts: schemas.ts
          path: ${{ github.workspace }}/crates/bitwarden-napi/src-ts/bitwarden_client/
          workflow_conclusion: success
          branch: master

      - name: Install dependencies
        run: npm ci

      - name: Run tsc
        run: npm run tsc

      - name: Login to Azure
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          keyvault: "bitwarden-ci"
          secrets: "npm-api-key"

      - name: Download artifacts
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          workflow: build-napi.yml
          path: ${{ github.workspace }}/crates/bitwarden-napi/artifacts
          workflow_conclusion: success
          branch: ${{ github.ref_name }}

      - name: Dry Run - Download artifacts
        if: ${{ github.event.inputs.release_type == 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@12452ffcde72eca60a91abef555090ad17ba2108
        with:
          workflow: build-napi.yml
          path: ${{ github.workspace }}/crates/bitwarden-napi/artifacts
          workflow_conclusion: success
          branch: master

      - name: Move artifacts
        run: npm run artifacts

      - name: Setup NPM
        run: |
          echo 'registry="https://registry.npmjs.org/"' > ./.npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ./.npmrc

          echo 'registry="https://registry.npmjs.org/"' > ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ steps.retrieve-secrets.outputs.npm-api-key }}

      - name: Publish NPM
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: npm publish --access public --registry=https://registry.npmjs.org/  --userconfig=./.npmrc
